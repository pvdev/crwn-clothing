{"ast":null,"code":"import _defineProperty from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var addItemToCart = function addItemToCart(cartItems, cartItemToAdd) {\n  //check if item in cart and grab if so\n  // const existingCartItem = cartItems.find(\n  //   cartItem => cartItem.id === cartItemToAdd.id\n  // )\n  //if item exist in cart, increment quantity and update property\n  // if (existingCartItem) {\n  return cartItems.map(function (cartItem) {\n    return cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: (1 || cartItem.quantity) + 1\n    }) : cartItem;\n  }); // }\n  // add quantity property on first time item added cart entry\n  // return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n};","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","map","cartItem","id","quantity"],"mappings":";;;;;;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,aAAZ,EAA8B;AACzD;AACA;AACA;AACA;AAEA;AACA;AACA,SAAOD,SAAS,CAACE,GAAV,CAAc,UAAAC,QAAQ;AAAA,WAC3BA,QAAQ,CAACC,EAAT,KAAgBH,aAAa,CAACG,EAA9B,qBACSD,QADT;AACmBE,MAAAA,QAAQ,EAAE,CAAC,KAAKF,QAAQ,CAACE,QAAf,IAA2B;AADxD,SAEIF,QAHuB;AAAA,GAAtB,CAAP,CARyD,CAazD;AAEA;AACA;AACD,CAjBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  //check if item in cart and grab if so\n  // const existingCartItem = cartItems.find(\n  //   cartItem => cartItem.id === cartItemToAdd.id\n  // )\n\n  //if item exist in cart, increment quantity and update property\n  // if (existingCartItem) {\n  return cartItems.map(cartItem =>\n    cartItem.id === cartItemToAdd.id\n      ? { ...cartItem, quantity: (1 || cartItem.quantity) + 1 }\n      : cartItem\n  )\n  // }\n\n  // add quantity property on first time item added cart entry\n  // return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n"]},"metadata":{},"sourceType":"module"}