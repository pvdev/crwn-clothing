{"ast":null,"code":"import { createSelector } from 'reselect'; // input selector\n\nvar selectCart = function selectCart(state) {\n  return state.cart;\n};\n\nexport var selectCartItems = createSelector([selectCart], function (cart) {\n  return cart.cartItems;\n});\nexport var selectCartHidden = createSelector([selectCart], function (cart) {\n  return cart.hidden;\n});\nexport var selectCartItemsCount = createSelector([selectCartItems], function (cartItems) {\n  return cartItems.reduce(function (accumulatedQuantity, cartItem) {\n    return accumulatedQuantity + cartItem.quantity;\n  }, 0);\n});\nexport var selectCartTotal = createSelector([selectCartItems], function (cartItems) {\n  return cartItems.reduce(function (accumulatedQuantity, cartItem) {\n    return accumulatedQuantity + cartItem.quantity * cartItem.price;\n  }, 0);\n});","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAAxB;;AAEA,OAAO,IAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3C,UAAAE,IAAI;AAAA,SAAIA,IAAI,CAACE,SAAT;AAAA,CAFuC,CAAtC;AAKP,OAAO,IAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5C,UAAAE,IAAI;AAAA,SAAIA,IAAI,CAACI,MAAT;AAAA,CAFwC,CAAvC;AAKP,OAAO,IAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhD,UAAAC,SAAS;AAAA,SACPA,SAAS,CAACI,MAAV,CACE,UAACC,mBAAD,EAAsBC,QAAtB;AAAA,WACED,mBAAmB,GAAGC,QAAQ,CAACC,QADjC;AAAA,GADF,EAGE,CAHF,CADO;AAAA,CAFuC,CAA3C;AAUP,OAAO,IAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3C,UAAAC,SAAS;AAAA,SACPA,SAAS,CAACI,MAAV,CACE,UAACC,mBAAD,EAAsBC,QAAtB;AAAA,WACED,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KADrD;AAAA,GADF,EAGE,CAHF,CADO;AAAA,CAFkC,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\n// input selector\nconst selectCart = state => state.cart\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantity,\n      0\n    )\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantity * cartItem.price,\n      0\n    )\n)\n"]},"metadata":{},"sourceType":"module"}