{"ast":null,"code":"import _defineProperty from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nimport { addItemToCart } from './cart.utils';\nvar INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nvar cartReducer = function cartReducer() {\n  var cartState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, cartState, {\n        hidden: !cartState.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, cartState, {\n        cartItems: addItemToCart(cartState.cartItems, action.payload)\n      });\n\n    default:\n      return cartState;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","hidden","cartItems","cartReducer","cartState","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAuC;AAAA,MAAtCC,SAAsC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,kBAArB;AACE,+BACKH,SADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,SAAS,CAACH;AAFrB;;AAIF,SAAKH,eAAe,CAACU,QAArB;AACE,+BACKJ,SADL;AAEEF,QAAAA,SAAS,EAAEH,aAAa,CAACK,SAAS,CAACF,SAAX,EAAsBG,MAAM,CAACI,OAA7B;AAF1B;;AAIF;AACE,aAAOL,SAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types'\nimport { addItemToCart } from './cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n}\n\nconst cartReducer = (cartState = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...cartState,\n        hidden: !cartState.hidden,\n      }\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...cartState,\n        cartItems: addItemToCart(cartState.cartItems, action.payload),\n      }\n    default:\n      return cartState\n  }\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}