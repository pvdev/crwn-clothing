{"ast":null,"code":"import _classCallCheck from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync as _fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nvar CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    _classCallCheck(this, ShopPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShopPage).apply(this, arguments));\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // console.log('Mounting ShopPage')\n      var fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n      fetchCollectionsStartAsync(); // this.props.dispatch(fetchCollectionsStartAsync())\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {// console.log('Calling componentWillUnmount')\n      // only when using observable pattern\n      //this.unsubscribeFromSnapshot()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsFetching = _this$props.isCollectionsFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        render: function render(props) {\n          return React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n            isLoading: isCollectionsFetching || !isCollectionsLoaded\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:categoryId\"),\n        render: function render(props) {\n          return React.createElement(CollectionPageWithSpinner, Object.assign({\n            isLoading: isCollectionsFetching || !isCollectionsLoaded\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCollectionsStartAsync: function fetchCollectionsStartAsync() {\n      return dispatch(_fetchCollectionsStartAsync());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionsLoaded","CollectionsOverviewContainer","CollectionPage","WithSpinner","CollectionPageWithSpinner","ShopPage","props","match","isCollectionsFetching","isCollectionsLoaded","path","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAA0B,IAA1BA,2BAAT,QAA2C,+BAA3C;AACA,SACEC,2BADF,EAEEC,yBAFF,QAGO,gCAHP;AAKA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,IAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;;IAEMG,Q;;;;;;;;;;;;;wCACgB;AAClB;AADkB,UAEVP,0BAFU,GAEqB,KAAKQ,KAF1B,CAEVR,0BAFU;AAGlBA,MAAAA,0BAA0B,GAHR,CAIlB;AACD;;;2CAEsB,CACrB;AACA;AACA;AACD;;;6BAEQ;AAAA,wBACuD,KAAKQ,KAD5D;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,qBADR,eACQA,qBADR;AAAA,UAC+BC,mBAD/B,eAC+BA,mBAD/B;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAFN;AAGE,QAAA,MAAM,EAAE,gBAAAJ,KAAK;AAAA,iBACX,oBAAC,8BAAD;AACE,YAAA,SAAS,EAAEE,qBAAqB,IAAI,CAACC;AADvC,aAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKC,KAAK,CAACG,IAAX,iBADN;AAEE,QAAA,MAAM,EAAE,gBAAAJ,KAAK;AAAA,iBACX,oBAAC,yBAAD;AACE,YAAA,SAAS,EAAEE,qBAAqB,IAAI,CAACC;AADvC,aAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAuBD;;;;EAxCoBZ,KAAK,CAACiB,S;;AA2C7B,IAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/CY,EAAAA,qBAAqB,EAAET,2BADwB;AAE/CU,EAAAA,mBAAmB,EAAET;AAF0B,CAAD,CAAhD;;AAKA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtChB,IAAAA,0BAA0B,EAAE;AAAA,aAAMgB,QAAQ,CAAChB,2BAA0B,EAA3B,CAAd;AAAA;AADU,GAAL;AAAA,CAAnC;;AAIA,eAAeD,OAAO,CACpBe,eADoB,EAEpBC,kBAFoB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\nimport {\n  selectIsCollectionsFetching,\n  selectIsCollectionsLoaded,\n} from '../../redux/shop/shop.selector'\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'\nimport CollectionPage from '../collection/collection.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    // console.log('Mounting ShopPage')\n    const { fetchCollectionsStartAsync } = this.props\n    fetchCollectionsStartAsync()\n    // this.props.dispatch(fetchCollectionsStartAsync())\n  }\n\n  componentWillUnmount() {\n    // console.log('Calling componentWillUnmount')\n    // only when using observable pattern\n    //this.unsubscribeFromSnapshot()\n  }\n\n  render() {\n    const { match, isCollectionsFetching, isCollectionsLoaded } = this.props\n\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionsFetching || !isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:categoryId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionsFetching || !isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}