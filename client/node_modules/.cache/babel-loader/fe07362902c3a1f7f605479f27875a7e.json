{"ast":null,"code":"import _classCallCheck from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync as _fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsFetching } from '../../redux/shop/shop.selector';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nvar CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nvar CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    _classCallCheck(this, ShopPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShopPage).apply(this, arguments));\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Mounting ShopPage');\n      var fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n      fetchCollectionsStartAsync(); // this.props.dispatch(fetchCollectionsStartAsync())\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {// console.log('Calling componentWillUnmount')\n      // only when using observable pattern\n      //this.unsubscribeFromSnapshot()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsFetching = _this$props.isCollectionsFetching;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        render: function render(props) {\n          return React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n            isLoading: isCollectionsFetching\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:categoryId\"),\n        render: function render(props) {\n          return React.createElement(CollectionPageWithSpinner, Object.assign({\n            isLoading: isCollectionsFetching\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCollectionsStartAsync: function fetchCollectionsStartAsync() {\n      return dispatch(_fetchCollectionsStartAsync());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionsFetching","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","console","log","props","match","isCollectionsFetching","path","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAA0B,IAA1BA,2BAAT,QAA2C,+BAA3C;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,IAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,IAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;IAEMI,Q;;;;;;;;;;;;;wCACgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADkB,UAEVT,0BAFU,GAEqB,KAAKU,KAF1B,CAEVV,0BAFU;AAGlBA,MAAAA,0BAA0B,GAHR,CAIlB;AACD;;;2CAEsB,CACrB;AACA;AACA;AACD;;;6BAEQ;AAAA,wBACkC,KAAKU,KADvC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,qBADR,eACQA,qBADR;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,QAAA,MAAM,EAAE,gBAAAH,KAAK;AAAA,iBACX,oBAAC,8BAAD;AACE,YAAA,SAAS,EAAEE;AADb,aAEMF,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKC,KAAK,CAACE,IAAX,iBADN;AAEE,QAAA,MAAM,EAAE,gBAAAH,KAAK;AAAA,iBACX,oBAAC,yBAAD;AACE,YAAA,SAAS,EAAEE;AADb,aAEMF,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAuBD;;;;EAxCoBd,KAAK,CAACkB,S;;AA2C7B,IAAMC,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Cc,EAAAA,qBAAqB,EAAEX;AADwB,CAAD,CAAhD;;AAIA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCjB,IAAAA,0BAA0B,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,2BAA0B,EAA3B,CAAd;AAAA;AADU,GAAL;AAAA,CAAnC;;AAIA,eAAeD,OAAO,CACpBgB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbT,QAHa,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\nimport { selectIsCollectionsFetching } from '../../redux/shop/shop.selector'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    console.log('Mounting ShopPage')\n    const { fetchCollectionsStartAsync } = this.props\n    fetchCollectionsStartAsync()\n    // this.props.dispatch(fetchCollectionsStartAsync())\n  }\n\n  componentWillUnmount() {\n    // console.log('Calling componentWillUnmount')\n    // only when using observable pattern\n    //this.unsubscribeFromSnapshot()\n  }\n\n  render() {\n    const { match, isCollectionsFetching } = this.props\n\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionsFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:categoryId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionsFetching}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}