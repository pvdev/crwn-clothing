{"ast":null,"code":"import _classCallCheck from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections as _updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nvar CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nvar CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    _this.unsubscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection('collections');\n      this.unsubscribeFromSnapshot = collectionRef.onSnapshot(function (snapshot) {\n        var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log('Calling componentWillUnmount')\n      this.unsubscribeFromSnapshot();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      var loading = this.state.loading;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        render: function render(props) {\n          return React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n            isLoading: loading\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:categoryId\"),\n        render: function render(props) {\n          return React.createElement(CollectionPageWithSpinner, Object.assign({\n            isLoading: loading\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,IAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;AACA,IAAMM,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;IAEMM,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;UAIRC,uB,GAA0B,I;;;;;;wCAEN;AAAA;;AAAA,UACVX,iBADU,GACY,KAAKY,KADjB,CACVZ,iBADU;AAGlB,UAAMa,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEA,WAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,UAAAC,QAAQ,EAAI;AAClE,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAhB,QAAAA,iBAAiB,CAACiB,cAAD,CAAjB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAJ8B,CAA/B;AAKD;;;2CAEsB;AACrB;AACA,WAAKC,uBAAL;AACD;;;6BAEQ;AAAA,UACCQ,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAAA,UAECT,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,CAFN;AAGE,QAAA,MAAM,EAAE,gBAAAR,KAAK;AAAA,iBACX,oBAAC,8BAAD;AAAgC,YAAA,SAAS,EAAEF;AAA3C,aAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKO,KAAK,CAACC,IAAX,iBADN;AAEE,QAAA,MAAM,EAAE,gBAAAR,KAAK;AAAA,iBACX,oBAAC,yBAAD;AAA2B,YAAA,SAAS,EAAEF;AAAtC,aAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;;;;EA5CoBf,KAAK,CAACwB,S;;AA+C7B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCvB,IAAAA,iBAAiB,EAAE,2BAAAiB,cAAc;AAAA,aAC/BM,QAAQ,CAACvB,kBAAiB,CAACiB,cAAD,CAAlB,CADuB;AAAA;AADK,GAAL;AAAA,CAAnC;;AAKA,eAAelB,OAAO,CACpB,IADoB,EAEpBuB,kBAFoB,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  unsubscribeFromSnapshot = null\n\n  componentDidMount() {\n    const { updateCollections } = this.props\n\n    const collectionRef = firestore.collection('collections')\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n      this.setState({ loading: false })\n    })\n  }\n\n  componentWillUnmount() {\n    // console.log('Calling componentWillUnmount')\n    this.unsubscribeFromSnapshot()\n  }\n\n  render() {\n    const { match } = this.props\n    const { loading } = this.state\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:categoryId`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap)),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}