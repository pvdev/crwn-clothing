{"ast":null,"code":"import ShopActionTypes from './shops.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport var fetchCollectionsStart = function fetchCollectionsStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport var fetchCollectionsFailure = function fetchCollectionsFailure(errorMessage) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n}; // thunk action returning a function\n\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart()); // doing with promise style\n\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsStart(collectionsMap));\n    }).catch(function (error) {\n      return dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,eAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AAC1CC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,cAAc;AAAA,SAAK;AACxDH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,IAAAA,OAAO,EAAEF;AAF+C,GAAL;AAAA,CAA9C;AAKP,OAAO,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,YAAY;AAAA,SAAK;AACtDP,IAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,IAAAA,OAAO,EAAEE;AAF6C,GAAL;AAAA,CAA5C,C,CAKP;;AACA,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC9C,SAAO,UAAAC,QAAQ,EAAI;AACjB,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFiB,CAIjB;;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,UAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACX,qBAAqB,CAACI,cAAD,CAAtB,CAAR;AACD,KALH,EAMGa,KANH,CAMS,UAAAC,KAAK;AAAA,aAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ;AAAA,KANd;AAOD,GAZD;AAaD,CAdM","sourcesContent":["import ShopActionTypes from './shops.types'\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n})\n\n// thunk action returning a function\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections')\n    dispatch(fetchCollectionsStart())\n\n    // doing with promise style\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsStart(collectionsMap))\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}