{"ast":null,"code":"import _classCallCheck from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections as _updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    _this.unsubscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection('collections');\n      this.unsubscribeFromSnapshot = collectionRef.onSnapshot(function (snapshot) {\n        var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log('Calling componentWillUnmount')\n      this.unsubscribeFromSnapshot();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        component: CollectionsOverview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:categoryId\"),\n        component: CollectionPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/pvessels/Dropbox/development/react-complete-dev-2019/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","withSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","state","loading","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;IAKMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;UAIRC,uB,GAA0B,I;;;;;;wCAEN;AAAA;;AAAA,UACVT,iBADU,GACY,KAAKU,KADjB,CACVV,iBADU;AAGlB,UAAMW,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEA,WAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,UAAAC,QAAQ,EAAI;AAClE,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAd,QAAAA,iBAAiB,CAACe,cAAD,CAAjB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAJ8B,CAA/B;AAKD;;;2CAEsB;AACrB;AACA,WAAKC,uBAAL;AACD;;;6BAEQ;AAAA,UACCQ,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,QAAA,SAAS,EAAEhB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKe,KAAK,CAACC,IAAX,iBAAX;AAA0C,QAAA,SAAS,EAAEf,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAhCoBN,KAAK,CAACsB,S;;AAmC7B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCrB,IAAAA,iBAAiB,EAAE,2BAAAe,cAAc;AAAA,aAC/BM,QAAQ,CAACrB,kBAAiB,CAACe,cAAD,CAAlB,CADuB;AAAA;AADK,GAAL;AAAA,CAAnC;;AAKA,eAAehB,OAAO,CACpB,IADoB,EAEpBqB,kBAFoB,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nimport withSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  unsubscribeFromSnapshot = null\n\n  componentDidMount() {\n    const { updateCollections } = this.props\n\n    const collectionRef = firestore.collection('collections')\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n      this.setState({ loading: false })\n    })\n  }\n\n  componentWillUnmount() {\n    // console.log('Calling componentWillUnmount')\n    this.unsubscribeFromSnapshot()\n  }\n\n  render() {\n    const { match } = this.props\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:categoryId`} component={CollectionPage} />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap)),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}